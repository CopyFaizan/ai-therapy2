
import { GoogleGenAI } from "@google/genai";

// FIX: Removed apiKey parameter. API key is now sourced from environment variables.
export const generateArtFromFeelings = async (feelings: string): Promise<string> => {
    // FIX: Switched to standard initialization with environment variable for API key.
    const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

    try {
        const fullPrompt = `Create a visually stunning, abstract therapeutic art piece that represents the following feeling or situation: "${feelings}". The style should be dreamlike and expressive, using a soft, calming color palette. Focus on textures and symbolic imagery rather than literal representation.`;

        const response = await ai.models.generateImages({
            model: 'imagen-4.0-generate-001',
            prompt: fullPrompt,
            config: {
              numberOfImages: 1,
              outputMimeType: 'image/jpeg',
              aspectRatio: '1:1',
            },
        });

        if (response.generatedImages && response.generatedImages.length > 0) {
            const base64ImageBytes: string = response.generatedImages[0].image.imageBytes;
            return `data:image/jpeg;base64,${base64ImageBytes}`;
        } else {
            throw new Error("No image was generated by the API.");
        }
    } catch (error) {
        console.error("Error generating image with Gemini API:", error);
        // FIX: Updated error message to reflect API key is from environment configuration.
        if (error instanceof Error && (error.message.toLowerCase().includes('api key'))) {
             throw new Error("The API key is invalid or missing. Please check your environment configuration.");
        }
        throw new Error("Failed to create art. The connection to the creative muse seems to be lost. Please try again later.");
    }
};
